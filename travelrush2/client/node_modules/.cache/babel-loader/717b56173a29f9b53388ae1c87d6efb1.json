{"ast":null,"code":"//adding API queries for app here\nimport axios from \"axios\"; //URL and API key for google API\n\nvar googleURL = \"https://maps.googleapis.com/maps/api/geocode/json?address=\";\nvar googleKEY = \"AIzaSyCqOAF-sXj7Q5MxZzQTBIDyjHYSfVD_WT0\"; //google api query export\n\nexport var googleSearch = function googleSearch(formattedAddress) {\n  return axios.get(googleURL + formattedAddress + \"&key=\" + googleKEY);\n}; //URL and API key for airportFinder API\n\nvar airportFinderURL = \"https://cometari-airportsfinder-v1.p.rapidapi.com/api/airports/by-radius?radius=50&lng=\";\nvar config = {\n  headers: {\n    \"X-RapidAPI-Host\": \"cometari-airportsfinder-v1.p.rapidapi.com\",\n    \"X-RapidAPI-Key\": \"f60e32620bmsh0545e1c4b416f30p1425cdjsn99e5174ad055\"\n  }\n}; //airportFinder api query export\n//note to Dupe - had to change the placeholders for longitude and latitude from coordLoc.long and coordLoc.lat to just long and lat, so coordLoc.long and coordLoc.lat will have to have to be saved in long and lat vars\n\nexport var airportFinderSearch = function airportFinderSearch(long, lat) {\n  return axios.get(airportFinderURL + long + \"&lat=\" + lat, config);\n}; //URL and API key for yelp API\n\nvar yelpURL = \"https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=\";\nvar yelpAPIKey = \"NNn_iZkgwcsoXyb1LwNcwgRAiCL8c3RkazAkRcQueV0e5b0lZNV-SGGIeosL3AiABzN0_PsQasfbyA8BkbNTjHr-RiTH3sKFAPyB8SCmQInth1SBzlW1uhiuBsr5XHYx\";\nvar configYelp = {\n  headers: {\n    Authorization: \"Bearer \" + yelpAPIKey\n  }\n};\nexport var yelpSearch = function yelpSearch(term, long, lat) {\n  return axios.get(yelpURL + term + \"&latitude=\" + lat + \"&longitude=\" + long + \"&limit=10\", configYelp);\n}; //URL and API key for openweathermap API\n\nvar weatherURL = \"https://api.openweathermap.org/data/2.5/forecast?lat=\";\nvar weatherAPIKey = \"61fb0fbf5b4af7a73cbae239fe1b3fbf\";\nexport var weatherSearch = function weatherSearch(long, lat) {\n  return axios.get(weatherURL + lat + \"&lon=\" + long + \"&units=imperial&mode=json&appid=\" + weatherAPIKey);\n}; // Gets all airports list that will be used for the autocomplete. NOT WORKING YET!!!\n\nexport var airportsList = function airportsList() {\n  return axios.get(\"/api/airport\");\n}; //SERVER IS ON 3001 BUT REACT APP IS IN 3000????","map":{"version":3,"sources":["C:\\Users\\maafa\\Desktop\\UCRX\\projects\\travelRush2\\travelrush2\\client\\src\\utils\\API.js"],"names":["axios","googleURL","googleKEY","googleSearch","formattedAddress","get","airportFinderURL","config","headers","airportFinderSearch","long","lat","yelpURL","yelpAPIKey","configYelp","Authorization","yelpSearch","term","weatherURL","weatherAPIKey","weatherSearch","airportsList"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,IAAMC,SAAS,GAAG,4DAAlB;AACA,IAAMC,SAAS,GAAG,yCAAlB,C,CAEA;;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,gBAAgB,EAAI;AAC9C,SAAOJ,KAAK,CAACK,GAAN,CAAUJ,SAAS,GAAGG,gBAAZ,GAA+B,OAA/B,GAAyCF,SAAnD,CAAP;AACD,CAFM,C,CAIP;;AACA,IAAMI,gBAAgB,GACpB,yFADF;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE;AACP,uBAAmB,2CADZ;AAEP,sBAAkB;AAFX;AADI,CAAf,C,CAOA;AACA;;AACA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,IAAD,EAAOC,GAAP,EAAe;AAChD,SAAOX,KAAK,CAACK,GAAN,CAAUC,gBAAgB,GAAGI,IAAnB,GAA0B,OAA1B,GAAoCC,GAA9C,EAAmDJ,MAAnD,CAAP;AACD,CAFM,C,CAIP;;AACA,IAAMK,OAAO,GACX,qFADF;AAEA,IAAMC,UAAU,GACd,kIADF;AAEA,IAAMC,UAAU,GAAG;AACjBN,EAAAA,OAAO,EAAE;AACPO,IAAAA,aAAa,EAAE,YAAYF;AADpB;AADQ,CAAnB;AAMA,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAOP,IAAP,EAAaC,GAAb,EAAqB;AAC7C,SAAOX,KAAK,CAACK,GAAN,CACLO,OAAO,GAAGK,IAAV,GAAiB,YAAjB,GAAgCN,GAAhC,GAAsC,aAAtC,GAAsDD,IAAtD,GAA6D,WADxD,EAELI,UAFK,CAAP;AAID,CALM,C,CAOP;;AACA,IAAMI,UAAU,GAAG,uDAAnB;AACA,IAAMC,aAAa,GAAG,kCAAtB;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACV,IAAD,EAAOC,GAAP,EAAe;AAC1C,SAAOX,KAAK,CAACK,GAAN,CACLa,UAAU,GACRP,GADF,GAEE,OAFF,GAGED,IAHF,GAIE,kCAJF,GAKES,aANG,CAAP;AAQD,CATM,C,CAWP;;AACA,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,GAAM;AAChC,SAAOrB,KAAK,CAACK,GAAN,CAAU,cAAV,CAAP;AACD,CAFM,C,CAIP","sourcesContent":["//adding API queries for app here\nimport axios from \"axios\";\n\n//URL and API key for google API\nconst googleURL = \"https://maps.googleapis.com/maps/api/geocode/json?address=\";\nconst googleKEY = \"AIzaSyCqOAF-sXj7Q5MxZzQTBIDyjHYSfVD_WT0\";\n\n//google api query export\nexport const googleSearch = formattedAddress => {\n  return axios.get(googleURL + formattedAddress + \"&key=\" + googleKEY);\n};\n\n//URL and API key for airportFinder API\nconst airportFinderURL =\n  \"https://cometari-airportsfinder-v1.p.rapidapi.com/api/airports/by-radius?radius=50&lng=\";\nconst config = {\n  headers: {\n    \"X-RapidAPI-Host\": \"cometari-airportsfinder-v1.p.rapidapi.com\",\n    \"X-RapidAPI-Key\": \"f60e32620bmsh0545e1c4b416f30p1425cdjsn99e5174ad055\"\n  }\n};\n\n//airportFinder api query export\n//note to Dupe - had to change the placeholders for longitude and latitude from coordLoc.long and coordLoc.lat to just long and lat, so coordLoc.long and coordLoc.lat will have to have to be saved in long and lat vars\nexport const airportFinderSearch = (long, lat) => {\n  return axios.get(airportFinderURL + long + \"&lat=\" + lat, config);\n};\n\n//URL and API key for yelp API\nconst yelpURL =\n  \"https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=\";\nconst yelpAPIKey =\n  \"NNn_iZkgwcsoXyb1LwNcwgRAiCL8c3RkazAkRcQueV0e5b0lZNV-SGGIeosL3AiABzN0_PsQasfbyA8BkbNTjHr-RiTH3sKFAPyB8SCmQInth1SBzlW1uhiuBsr5XHYx\";\nconst configYelp = {\n  headers: {\n    Authorization: \"Bearer \" + yelpAPIKey\n  }\n};\n\nexport const yelpSearch = (term, long, lat) => {\n  return axios.get(\n    yelpURL + term + \"&latitude=\" + lat + \"&longitude=\" + long + \"&limit=10\",\n    configYelp\n  );\n};\n\n//URL and API key for openweathermap API\nconst weatherURL = \"https://api.openweathermap.org/data/2.5/forecast?lat=\";\nconst weatherAPIKey = \"61fb0fbf5b4af7a73cbae239fe1b3fbf\";\n\nexport const weatherSearch = (long, lat) => {\n  return axios.get(\n    weatherURL +\n      lat +\n      \"&lon=\" +\n      long +\n      \"&units=imperial&mode=json&appid=\" +\n      weatherAPIKey\n  );\n};\n\n// Gets all airports list that will be used for the autocomplete. NOT WORKING YET!!!\nexport const airportsList = () => {\n  return axios.get(\"/api/airport\");\n};\n\n//SERVER IS ON 3001 BUT REACT APP IS IN 3000????\n"]},"metadata":{},"sourceType":"module"}