{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\maafa\\\\Desktop\\\\UCRX\\\\projects\\\\travelRush2\\\\travelrush2\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\maafa\\\\Desktop\\\\UCRX\\\\projects\\\\travelRush2\\\\travelrush2\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\maafa\\\\Desktop\\\\UCRX\\\\projects\\\\travelRush2\\\\travelrush2\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\maafa\\\\Desktop\\\\UCRX\\\\projects\\\\travelRush2\\\\travelrush2\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\maafa\\\\Desktop\\\\UCRX\\\\projects\\\\travelRush2\\\\travelrush2\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\maafa\\\\Desktop\\\\UCRX\\\\projects\\\\travelRush2\\\\travelrush2\\\\client\\\\src\\\\components\\\\Card\\\\YelpCard\\\\cardContainer.js\";\n//container to render the first Card component once the api call is made to display the 0 index card\n//container needs to be loaded on searchForm click event - need to pull latitude and longitude from searchForm\nimport React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport { yelpSearch } from \"../../../utils/API\";\n\nvar CardContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CardContainer, _Component);\n\n  function CardContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CardContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CardContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      response1: {},\n      response2: {},\n      response3: {} //search: \"\"\n\n    };\n    return _this;\n  }\n\n  _createClass(CardContainer, [{\n    key: \"componentDidMount\",\n    // When this component mounts, search the Yelp API for the corresponding card\n    //replace current long/lat with long/lat from Dupe's SearchForm component\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var call1 = yelpSearch('hotels', \"-87.904724\", \"41.978611\");\n      var call2 = yelpSearch('restaurants', \"-87.904724\", \"41.978611\");\n      var call3 = yelpSearch('coffee', \"-87.904724\", \"41.978611\"); //how to run all at the same time in instead of having to run one at a time - this way only runs the last one\n\n      call3.then(function (response3) {\n        //console.log(response3.data);\n        var coffeeInfo = {\n          name: response3.data.businesses[0].name,\n          image: response3.data.businesses[0].image_url,\n          url: response3.data.businesses[0].url,\n          price: response3.data.businesses[0].price,\n          rating: response3.data.businesses[0].rating,\n          title: response3.data.businesses[0].categories[0].title\n        }; //console.log(coffeeInfo)\n\n        _this2.setState({\n          response3: coffeeInfo\n        });\n      });\n      call1.then(function (response1) {\n        //console.log(response1.data);\n        var hotelsInfo = {\n          name: response1.data.businesses[0].name,\n          image: response1.data.businesses[0].image_url,\n          url: response1.data.businesses[0].url,\n          price: response1.data.businesses[0].price,\n          rating: response1.data.businesses[0].rating,\n          title: response1.data.businesses[0].categories[0].title\n        }; //console.log(hotelsInfo)\n\n        _this2.setState({\n          response1: hotelsInfo\n        });\n      });\n      call2.then(function (response2) {\n        console.log(response2.data);\n        var restaurantsInfo = {\n          name: response2.data.businesses[0].name,\n          image: response2.data.businesses[0].image_url,\n          url: response2.data.businesses[0].url,\n          price: response2.data.businesses[0].price,\n          rating: response2.data.businesses[0].rating,\n          title: response2.data.businesses[0].categories[0].title\n        };\n        console.log(restaurantsInfo);\n\n        _this2.setState({\n          response2: restaurantsInfo\n        });\n      });\n    } // yelpSearchSubmit = query => {\n    //     yelpSearch(query)\n    //         .then(res => this.setState({ result: res.data }))\n    //         .catch(err => console.log(err));\n    // };\n    // handleInputChange = event => {\n    //     const value = event.target.value;\n    //     const name = event.target.name;\n    //     this.setState({\n    //         [name]: value\n    //     })\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return [React.createElement(Card, {\n        name: this.state.response2.title,\n        img: \"restaurant-img\",\n        imgsrc: this.state.response2.image,\n        cardTitle: \"restaurant-name\",\n        nameEntry: this.state.response2.name,\n        value: \"restaurants\",\n        btnName: \"restaurant\",\n        contentID: \"restaurant-info\",\n        title: \"restaurant-title\",\n        rating: \"restaurant-rating\",\n        ratingEntry: this.state.response2.rating,\n        price: \"restaurant-price\",\n        priceEntry: this.state.response2.price,\n        url: \"restaurant-url\",\n        urlEntry: this.state.response2.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(Card, {\n        name: this.state.response3.title,\n        img: \"coffee-img\",\n        imgsrc: this.state.response3.image,\n        cardTitle: \"coffee-name\",\n        nameEntry: this.state.response3.name,\n        value: \"coffee\",\n        btnName: \"free_breakfast\",\n        contentID: \"coffee-info\",\n        title: \"coffee-title\",\n        rating: \"coffee-rating\",\n        ratingEntry: this.state.response3.rating,\n        price: \"coffee-price\",\n        priceEntry: this.state.response3.price,\n        url: \"coffee-url\",\n        urlEntry: this.state.response3.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(Card, {\n        name: this.state.response1.title,\n        img: \"hotel-img\",\n        imgsrc: this.state.response1.image,\n        cardTitle: \"hotel-name\",\n        nameEntry: this.state.response1.name,\n        value: \"hotels\",\n        btnName: \"hotel\",\n        contentID: \"hotel-info\",\n        title: \"hotel-title\",\n        rating: \"hotel-rating\",\n        ratingEntry: this.state.response1.rating,\n        price: \"hotel-price\",\n        priceEntry: this.state.response1.price,\n        url: \"hotel-url\",\n        urlEntry: this.state.response1.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \">\")];\n    }\n  }]);\n\n  return CardContainer;\n}(Component);\n\nexport default CardContainer;","map":{"version":3,"sources":["C:\\Users\\maafa\\Desktop\\UCRX\\projects\\travelRush2\\travelrush2\\client\\src\\components\\Card\\YelpCard\\cardContainer.js"],"names":["React","Component","Card","yelpSearch","CardContainer","state","response1","response2","response3","call1","call2","call3","then","coffeeInfo","name","data","businesses","image","image_url","url","price","rating","title","categories","setState","hotelsInfo","console","log","restaurantsInfo"],"mappings":";;;;;;AAAA;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,UAAT,QAA2B,oBAA3B;;IAGMC,a;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,SAAS,EAAE,EADP;AAEJC,MAAAA,SAAS,EAAE,EAFP;AAGJC,MAAAA,SAAS,EAAE,EAHP,CAIJ;;AAJI,K;;;;;;AAQR;AACA;wCACoB;AAAA;;AAChB,UAAIC,KAAK,GAAGN,UAAU,CAAC,QAAD,EAAW,YAAX,EAAyB,WAAzB,CAAtB;AACA,UAAIO,KAAK,GAAGP,UAAU,CAAC,aAAD,EAAgB,YAAhB,EAA8B,WAA9B,CAAtB;AACA,UAAIQ,KAAK,GAAGR,UAAU,CAAC,QAAD,EAAW,YAAX,EAAyB,WAAzB,CAAtB,CAHgB,CAIhB;;AACCQ,MAAAA,KAAD,CAAQC,IAAR,CAAa,UAAAJ,SAAS,EAAI;AACtB;AAEA,YAAIK,UAAU,GAAG;AACbC,UAAAA,IAAI,EAAEN,SAAS,CAACO,IAAV,CAAeC,UAAf,CAA0B,CAA1B,EAA6BF,IADtB;AAEbG,UAAAA,KAAK,EAAET,SAAS,CAACO,IAAV,CAAeC,UAAf,CAA0B,CAA1B,EAA6BE,SAFvB;AAGbC,UAAAA,GAAG,EAAEX,SAAS,CAACO,IAAV,CAAeC,UAAf,CAA0B,CAA1B,EAA6BG,GAHrB;AAIbC,UAAAA,KAAK,EAAEZ,SAAS,CAACO,IAAV,CAAeC,UAAf,CAA0B,CAA1B,EAA6BI,KAJvB;AAKbC,UAAAA,MAAM,EAAEb,SAAS,CAACO,IAAV,CAAeC,UAAf,CAA0B,CAA1B,EAA6BK,MALxB;AAMbC,UAAAA,KAAK,EAAEd,SAAS,CAACO,IAAV,CAAeC,UAAf,CAA0B,CAA1B,EAA6BO,UAA7B,CAAwC,CAAxC,EAA2CD;AANrC,SAAjB,CAHsB,CAWtB;;AACA,QAAA,MAAI,CAACE,QAAL,CAAc;AAAEhB,UAAAA,SAAS,EAAEK;AAAb,SAAd;AACH,OAbD;AAeAJ,MAAAA,KAAK,CAACG,IAAN,CAAW,UAAAN,SAAS,EAAI;AACpB;AAEA,YAAImB,UAAU,GAAG;AACbX,UAAAA,IAAI,EAAER,SAAS,CAACS,IAAV,CAAeC,UAAf,CAA0B,CAA1B,EAA6BF,IADtB;AAEbG,UAAAA,KAAK,EAAEX,SAAS,CAACS,IAAV,CAAeC,UAAf,CAA0B,CAA1B,EAA6BE,SAFvB;AAGbC,UAAAA,GAAG,EAAEb,SAAS,CAACS,IAAV,CAAeC,UAAf,CAA0B,CAA1B,EAA6BG,GAHrB;AAIbC,UAAAA,KAAK,EAAEd,SAAS,CAACS,IAAV,CAAeC,UAAf,CAA0B,CAA1B,EAA6BI,KAJvB;AAKbC,UAAAA,MAAM,EAAEf,SAAS,CAACS,IAAV,CAAeC,UAAf,CAA0B,CAA1B,EAA6BK,MALxB;AAMbC,UAAAA,KAAK,EAAEhB,SAAS,CAACS,IAAV,CAAeC,UAAf,CAA0B,CAA1B,EAA6BO,UAA7B,CAAwC,CAAxC,EAA2CD;AANrC,SAAjB,CAHoB,CAWpB;;AACA,QAAA,MAAI,CAACE,QAAL,CAAc;AAAElB,UAAAA,SAAS,EAAEmB;AAAb,SAAd;AACH,OAbD;AAeAf,MAAAA,KAAK,CAACE,IAAN,CAAW,UAAAL,SAAS,EAAI;AACpBmB,QAAAA,OAAO,CAACC,GAAR,CAAYpB,SAAS,CAACQ,IAAtB;AAEA,YAAIa,eAAe,GAAG;AAClBd,UAAAA,IAAI,EAAEP,SAAS,CAACQ,IAAV,CAAeC,UAAf,CAA0B,CAA1B,EAA6BF,IADjB;AAElBG,UAAAA,KAAK,EAAEV,SAAS,CAACQ,IAAV,CAAeC,UAAf,CAA0B,CAA1B,EAA6BE,SAFlB;AAGlBC,UAAAA,GAAG,EAAEZ,SAAS,CAACQ,IAAV,CAAeC,UAAf,CAA0B,CAA1B,EAA6BG,GAHhB;AAIlBC,UAAAA,KAAK,EAAEb,SAAS,CAACQ,IAAV,CAAeC,UAAf,CAA0B,CAA1B,EAA6BI,KAJlB;AAKlBC,UAAAA,MAAM,EAAEd,SAAS,CAACQ,IAAV,CAAeC,UAAf,CAA0B,CAA1B,EAA6BK,MALnB;AAMlBC,UAAAA,KAAK,EAAEf,SAAS,CAACQ,IAAV,CAAeC,UAAf,CAA0B,CAA1B,EAA6BO,UAA7B,CAAwC,CAAxC,EAA2CD;AANhC,SAAtB;AAQAI,QAAAA,OAAO,CAACC,GAAR,CAAYC,eAAZ;;AACA,QAAA,MAAI,CAACJ,QAAL,CAAc;AAAEjB,UAAAA,SAAS,EAAEqB;AAAb,SAAd;AAEH,OAdD;AAiBH,K,CACD;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;6BAGS;AACL,aAAO,CAGH,oBAAC,IAAD;AACI,QAAA,IAAI,EAAE,KAAKvB,KAAL,CAAWE,SAAX,CAAqBe,KAD/B;AAEI,QAAA,GAAG,EAAC,gBAFR;AAEyB,QAAA,MAAM,EAAE,KAAKjB,KAAL,CAAWE,SAAX,CAAqBU,KAFtD;AAGI,QAAA,SAAS,EAAC,iBAHd;AAII,QAAA,SAAS,EAAE,KAAKZ,KAAL,CAAWE,SAAX,CAAqBO,IAJpC;AAKI,QAAA,KAAK,EAAC,aALV;AAMI,QAAA,OAAO,EAAC,YANZ;AAOI,QAAA,SAAS,EAAC,iBAPd;AAQI,QAAA,KAAK,EAAC,kBARV;AASI,QAAA,MAAM,EAAC,mBATX;AAUI,QAAA,WAAW,EAAE,KAAKT,KAAL,CAAWE,SAAX,CAAqBc,MAVtC;AAWI,QAAA,KAAK,EAAC,kBAXV;AAYI,QAAA,UAAU,EAAE,KAAKhB,KAAL,CAAWE,SAAX,CAAqBa,KAZrC;AAaI,QAAA,GAAG,EAAC,gBAbR;AAcI,QAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWE,SAAX,CAAqBY,GAdnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHG,EAoBH,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,KAAKd,KAAL,CAAWG,SAAX,CAAqBc,KAAjC;AACI,QAAA,GAAG,EAAC,YADR;AACqB,QAAA,MAAM,EAAE,KAAKjB,KAAL,CAAWG,SAAX,CAAqBS,KADlD;AAEI,QAAA,SAAS,EAAC,aAFd;AAGI,QAAA,SAAS,EAAE,KAAKZ,KAAL,CAAWG,SAAX,CAAqBM,IAHpC;AAII,QAAA,KAAK,EAAC,QAJV;AAKI,QAAA,OAAO,EAAC,gBALZ;AAMI,QAAA,SAAS,EAAC,aANd;AAOI,QAAA,KAAK,EAAC,cAPV;AAQI,QAAA,MAAM,EAAC,eARX;AASI,QAAA,WAAW,EAAE,KAAKT,KAAL,CAAWG,SAAX,CAAqBa,MATtC;AAUI,QAAA,KAAK,EAAC,cAVV;AAWI,QAAA,UAAU,EAAE,KAAKhB,KAAL,CAAWG,SAAX,CAAqBY,KAXrC;AAYI,QAAA,GAAG,EAAC,YAZR;AAaI,QAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWG,SAAX,CAAqBW,GAbnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApBG,EAqCH,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,KAAKd,KAAL,CAAWC,SAAX,CAAqBgB,KAAjC;AACI,QAAA,GAAG,EAAC,WADR;AACoB,QAAA,MAAM,EAAE,KAAKjB,KAAL,CAAWC,SAAX,CAAqBW,KADjD;AAEI,QAAA,SAAS,EAAC,YAFd;AAGI,QAAA,SAAS,EAAE,KAAKZ,KAAL,CAAWC,SAAX,CAAqBQ,IAHpC;AAII,QAAA,KAAK,EAAC,QAJV;AAKI,QAAA,OAAO,EAAC,OALZ;AAMI,QAAA,SAAS,EAAC,YANd;AAOI,QAAA,KAAK,EAAC,aAPV;AAQI,QAAA,MAAM,EAAC,cARX;AASI,QAAA,WAAW,EAAE,KAAKT,KAAL,CAAWC,SAAX,CAAqBe,MATtC;AAUI,QAAA,KAAK,EAAC,aAVV;AAWI,QAAA,UAAU,EAAE,KAAKhB,KAAL,CAAWC,SAAX,CAAqBc,KAXrC;AAYI,QAAA,GAAG,EAAC,WAZR;AAaI,QAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWC,SAAX,CAAqBa,GAbnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aArCG,CAAP;AAqDH;;;;EArIuBlB,S;;AAwI5B,eAAeG,aAAf","sourcesContent":["//container to render the first Card component once the api call is made to display the 0 index card\n//container needs to be loaded on searchForm click event - need to pull latitude and longitude from searchForm\nimport React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport { yelpSearch } from \"../../../utils/API\";\n\n\nclass CardContainer extends Component {\n    state = {\n        response1: {},\n        response2: {},\n        response3: {},\n        //search: \"\"\n    };\n\n\n    // When this component mounts, search the Yelp API for the corresponding card\n    //replace current long/lat with long/lat from Dupe's SearchForm component\n    componentDidMount() {\n        var call1 = yelpSearch('hotels', \"-87.904724\", \"41.978611\");\n        var call2 = yelpSearch('restaurants', \"-87.904724\", \"41.978611\");\n        var call3 = yelpSearch('coffee', \"-87.904724\", \"41.978611\");\n        //how to run all at the same time in instead of having to run one at a time - this way only runs the last one\n        (call3).then(response3 => {\n            //console.log(response3.data);\n\n            var coffeeInfo = {\n                name: response3.data.businesses[0].name,\n                image: response3.data.businesses[0].image_url,\n                url: response3.data.businesses[0].url,\n                price: response3.data.businesses[0].price,\n                rating: response3.data.businesses[0].rating,\n                title: response3.data.businesses[0].categories[0].title,\n            }\n            //console.log(coffeeInfo)\n            this.setState({ response3: coffeeInfo })\n        });\n\n        call1.then(response1 => {\n            //console.log(response1.data);\n\n            var hotelsInfo = {\n                name: response1.data.businesses[0].name,\n                image: response1.data.businesses[0].image_url,\n                url: response1.data.businesses[0].url,\n                price: response1.data.businesses[0].price,\n                rating: response1.data.businesses[0].rating,\n                title: response1.data.businesses[0].categories[0].title,\n            }\n            //console.log(hotelsInfo)\n            this.setState({ response1: hotelsInfo })\n        })\n\n        call2.then(response2 => {\n            console.log(response2.data);\n\n            var restaurantsInfo = {\n                name: response2.data.businesses[0].name,\n                image: response2.data.businesses[0].image_url,\n                url: response2.data.businesses[0].url,\n                price: response2.data.businesses[0].price,\n                rating: response2.data.businesses[0].rating,\n                title: response2.data.businesses[0].categories[0].title,\n            }\n            console.log(restaurantsInfo)\n            this.setState({ response2: restaurantsInfo })\n\n        })\n\n\n    }\n    // yelpSearchSubmit = query => {\n    //     yelpSearch(query)\n    //         .then(res => this.setState({ result: res.data }))\n    //         .catch(err => console.log(err));\n    // };\n\n    // handleInputChange = event => {\n    //     const value = event.target.value;\n    //     const name = event.target.name;\n    //     this.setState({\n    //         [name]: value\n    //     })\n    // }\n\n\n    render() {\n        return [\n            \n\n            <Card\n                name={this.state.response2.title}\n                img=\"restaurant-img\" imgsrc={this.state.response2.image}\n                cardTitle=\"restaurant-name\"\n                nameEntry={this.state.response2.name}\n                value=\"restaurants\"\n                btnName=\"restaurant\"\n                contentID=\"restaurant-info\"\n                title=\"restaurant-title\"\n                rating=\"restaurant-rating\"\n                ratingEntry={this.state.response2.rating}\n                price=\"restaurant-price\"\n                priceEntry={this.state.response2.price}\n                url=\"restaurant-url\"\n                urlEntry={this.state.response2.url}>\n            </Card>,\n\n            <Card name={this.state.response3.title}\n                img=\"coffee-img\" imgsrc={this.state.response3.image}\n                cardTitle=\"coffee-name\"\n                nameEntry={this.state.response3.name}\n                value=\"coffee\"\n                btnName=\"free_breakfast\"\n                contentID=\"coffee-info\"\n                title=\"coffee-title\"\n                rating=\"coffee-rating\"\n                ratingEntry={this.state.response3.rating}\n                price=\"coffee-price\"\n                priceEntry={this.state.response3.price}\n                url=\"coffee-url\"\n                urlEntry={this.state.response3.url}>\n\n            </Card>,\n\n            <Card name={this.state.response1.title}\n                img=\"hotel-img\" imgsrc={this.state.response1.image}\n                cardTitle=\"hotel-name\"\n                nameEntry={this.state.response1.name}\n                value=\"hotels\"\n                btnName=\"hotel\"\n                contentID=\"hotel-info\"\n                title=\"hotel-title\"\n                rating=\"hotel-rating\"\n                ratingEntry={this.state.response1.rating}\n                price=\"hotel-price\"\n                priceEntry={this.state.response1.price}\n                url=\"hotel-url\"\n                urlEntry={this.state.response1.url}>\n                >\n        </Card>];\n    }\n\n}\nexport default CardContainer;\n\n"]},"metadata":{},"sourceType":"module"}