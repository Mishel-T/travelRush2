{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\maafa\\\\Desktop\\\\UCRX\\\\projects\\\\travelRush2\\\\travelrush2\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\maafa\\\\Desktop\\\\UCRX\\\\projects\\\\travelRush2\\\\travelrush2\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\maafa\\\\Desktop\\\\UCRX\\\\projects\\\\travelRush2\\\\travelrush2\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\maafa\\\\Desktop\\\\UCRX\\\\projects\\\\travelRush2\\\\travelrush2\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\maafa\\\\Desktop\\\\UCRX\\\\projects\\\\travelRush2\\\\travelrush2\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\maafa\\\\Desktop\\\\UCRX\\\\projects\\\\travelRush2\\\\travelrush2\\\\client\\\\src\\\\components\\\\Card\\\\YelpCard\\\\cardContainer.js\";\n//container to render the first Card component once the api call is made to display the 0 index card\n//container needs to be loaded on searchForm click event - need to pull latitude and longitude from searchForm\nimport React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport { yelpSearch } from \"../../../utils/API\";\n\nvar CardContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CardContainer, _Component);\n\n  function CardContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CardContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CardContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      response1: {},\n      response2: {},\n      response3: {},\n      search: {}\n    };\n    return _this;\n  }\n\n  _createClass(CardContainer, [{\n    key: \"componentDidMount\",\n    // When this component mounts, search the Yelp API for the corresponding card\n    //replace current long/lat with long/lat from Dupe's SearchForm component\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"I am inside the cardContainer!!!\");\n      console.log(this.props.parentState);\n      var searchContainInput = this.props.parentState.searchContainInput;\n      this.setState({\n        search: this.props.parentState\n      }); // var call1 = yelpSearch(\n      //   \"hotels\",\n      //   this.props.parentState.SearchContainInput,\n      //   this.props.parentState.SearchContainInput\n      // );\n\n      var call1 = yelpSearch(\"hotels\", \"-87.904724\", \"41.978611\");\n      var call2 = yelpSearch(\"restaurants\", \"-87.904724\", \"41.978611\");\n      var call3 = yelpSearch(\"coffee\", \"-87.904724\", \"41.978611\"); //how to run all at the same time in instead of having to run one at a time - this way only runs the last one\n\n      call3.then(function (response3) {\n        //console.log(response3.data);\n        var coffeeInfo = {\n          name: response3.data.businesses[0].name,\n          image: response3.data.businesses[0].image_url,\n          url: response3.data.businesses[0].url,\n          price: response3.data.businesses[0].price,\n          rating: response3.data.businesses[0].rating,\n          title: response3.data.businesses[0].categories[0].title\n        }; //console.log(coffeeInfo)\n\n        _this2.setState({\n          response3: coffeeInfo\n        });\n      });\n      call1.then(function (response1) {\n        //console.log(response1.data);\n        var hotelsInfo = {\n          name: response1.data.businesses[0].name,\n          image: response1.data.businesses[0].image_url,\n          url: response1.data.businesses[0].url,\n          price: response1.data.businesses[0].price,\n          rating: response1.data.businesses[0].rating,\n          title: response1.data.businesses[0].categories[0].title\n        }; //console.log(hotelsInfo)\n\n        _this2.setState({\n          response1: hotelsInfo\n        });\n      });\n      call2.then(function (response2) {\n        console.log(response2.data);\n        var restaurantsInfo = {\n          name: response2.data.businesses[0].name,\n          image: response2.data.businesses[0].image_url,\n          url: response2.data.businesses[0].url,\n          price: response2.data.businesses[0].price,\n          rating: response2.data.businesses[0].rating,\n          title: response2.data.businesses[0].categories[0].title\n        };\n        console.log(restaurantsInfo);\n\n        _this2.setState({\n          response2: restaurantsInfo\n        });\n      });\n    } // yelpSearchSubmit = query => {\n    //     yelpSearch(query)\n    //         .then(res => this.setState({ result: res.data }))\n    //         .catch(err => console.log(err));\n    // };\n    // handleInputChange = event => {\n    //     const value = event.target.value;\n    //     const name = event.target.name;\n    //     this.setState({\n    //         [name]: value\n    //     })\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return [React.createElement(Card, {\n        name: this.state.response2.title,\n        img: \"restaurant-img\",\n        imgsrc: this.state.response2.image,\n        cardTitle: \"restaurant-name\",\n        nameEntry: this.state.response2.name,\n        value: \"restaurants\",\n        btnName: \"restaurant\",\n        contentID: \"restaurant-info\",\n        title: \"restaurant-title\",\n        rating: \"restaurant-rating\",\n        ratingEntry: this.state.response2.rating,\n        price: \"restaurant-price\",\n        priceEntry: this.state.response2.price,\n        url: \"restaurant-url\",\n        urlEntry: this.state.response2.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(Card, {\n        name: this.state.response3.title,\n        img: \"coffee-img\",\n        imgsrc: this.state.response3.image,\n        cardTitle: \"coffee-name\",\n        nameEntry: this.state.response3.name,\n        value: \"coffee\",\n        btnName: \"free_breakfast\",\n        contentID: \"coffee-info\",\n        title: \"coffee-title\",\n        rating: \"coffee-rating\",\n        ratingEntry: this.state.response3.rating,\n        price: \"coffee-price\",\n        priceEntry: this.state.response3.price,\n        url: \"coffee-url\",\n        urlEntry: this.state.response3.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(Card, {\n        name: this.state.response1.title,\n        img: \"hotel-img\",\n        imgsrc: this.state.response1.image,\n        cardTitle: \"hotel-name\",\n        nameEntry: this.state.response1.name,\n        value: \"hotels\",\n        btnName: \"hotel\",\n        contentID: \"hotel-info\",\n        title: \"hotel-title\",\n        rating: \"hotel-rating\",\n        ratingEntry: this.state.response1.rating,\n        price: \"hotel-price\",\n        priceEntry: this.state.response1.price,\n        url: \"hotel-url\",\n        urlEntry: this.state.response1.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \">\")];\n    }\n  }]);\n\n  return CardContainer;\n}(Component);\n\nexport default CardContainer;","map":{"version":3,"sources":["C:\\Users\\maafa\\Desktop\\UCRX\\projects\\travelRush2\\travelrush2\\client\\src\\components\\Card\\YelpCard\\cardContainer.js"],"names":["React","Component","Card","yelpSearch","CardContainer","state","response1","response2","response3","search","console","log","props","parentState","searchContainInput","setState","call1","call2","call3","then","coffeeInfo","name","data","businesses","image","image_url","url","price","rating","title","categories","hotelsInfo","restaurantsInfo"],"mappings":"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","sourcesContent":["//container to render the first Card component once the api call is made to display the 0 index card\n//container needs to be loaded on searchForm click event - need to pull latitude and longitude from searchForm\nimport React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport { yelpSearch } from \"../../../utils/API\";\n\nclass CardContainer extends Component {\n  state = {\n    response1: {},\n    response2: {},\n    response3: {},\n    search: {}\n  };\n\n  // When this component mounts, search the Yelp API for the corresponding card\n  //replace current long/lat with long/lat from Dupe's SearchForm component\n  componentDidMount() {\n    console.log(\"I am inside the cardContainer!!!\");\n    console.log(this.props.parentState);\n    const { searchContainInput } = this.props.parentState;\n    this.setState({ search: this.props.parentState });\n\n    // var call1 = yelpSearch(\n    //   \"hotels\",\n    //   this.props.parentState.SearchContainInput,\n    //   this.props.parentState.SearchContainInput\n    // );\n    var call1 = yelpSearch(\"hotels\", \"-87.904724\", \"41.978611\");\n    var call2 = yelpSearch(\"restaurants\", \"-87.904724\", \"41.978611\");\n    var call3 = yelpSearch(\"coffee\", \"-87.904724\", \"41.978611\");\n    //how to run all at the same time in instead of having to run one at a time - this way only runs the last one\n    call3.then(response3 => {\n      //console.log(response3.data);\n\n      var coffeeInfo = {\n        name: response3.data.businesses[0].name,\n        image: response3.data.businesses[0].image_url,\n        url: response3.data.businesses[0].url,\n        price: response3.data.businesses[0].price,\n        rating: response3.data.businesses[0].rating,\n        title: response3.data.businesses[0].categories[0].title\n      };\n      //console.log(coffeeInfo)\n      this.setState({ response3: coffeeInfo });\n    });\n\n    call1.then(response1 => {\n      //console.log(response1.data);\n\n      var hotelsInfo = {\n        name: response1.data.businesses[0].name,\n        image: response1.data.businesses[0].image_url,\n        url: response1.data.businesses[0].url,\n        price: response1.data.businesses[0].price,\n        rating: response1.data.businesses[0].rating,\n        title: response1.data.businesses[0].categories[0].title\n      };\n      //console.log(hotelsInfo)\n      this.setState({ response1: hotelsInfo });\n    });\n\n    call2.then(response2 => {\n      console.log(response2.data);\n\n      var restaurantsInfo = {\n        name: response2.data.businesses[0].name,\n        image: response2.data.businesses[0].image_url,\n        url: response2.data.businesses[0].url,\n        price: response2.data.businesses[0].price,\n        rating: response2.data.businesses[0].rating,\n        title: response2.data.businesses[0].categories[0].title\n      };\n      console.log(restaurantsInfo);\n      this.setState({ response2: restaurantsInfo });\n    });\n  }\n  // yelpSearchSubmit = query => {\n  //     yelpSearch(query)\n  //         .then(res => this.setState({ result: res.data }))\n  //         .catch(err => console.log(err));\n  // };\n\n  // handleInputChange = event => {\n  //     const value = event.target.value;\n  //     const name = event.target.name;\n  //     this.setState({\n  //         [name]: value\n  //     })\n  // }\n\n  render() {\n    return [\n      <Card\n        name={this.state.response2.title}\n        img=\"restaurant-img\"\n        imgsrc={this.state.response2.image}\n        cardTitle=\"restaurant-name\"\n        nameEntry={this.state.response2.name}\n        value=\"restaurants\"\n        btnName=\"restaurant\"\n        contentID=\"restaurant-info\"\n        title=\"restaurant-title\"\n        rating=\"restaurant-rating\"\n        ratingEntry={this.state.response2.rating}\n        price=\"restaurant-price\"\n        priceEntry={this.state.response2.price}\n        url=\"restaurant-url\"\n        urlEntry={this.state.response2.url}\n      ></Card>,\n\n      <Card\n        name={this.state.response3.title}\n        img=\"coffee-img\"\n        imgsrc={this.state.response3.image}\n        cardTitle=\"coffee-name\"\n        nameEntry={this.state.response3.name}\n        value=\"coffee\"\n        btnName=\"free_breakfast\"\n        contentID=\"coffee-info\"\n        title=\"coffee-title\"\n        rating=\"coffee-rating\"\n        ratingEntry={this.state.response3.rating}\n        price=\"coffee-price\"\n        priceEntry={this.state.response3.price}\n        url=\"coffee-url\"\n        urlEntry={this.state.response3.url}\n      ></Card>,\n\n      <Card\n        name={this.state.response1.title}\n        img=\"hotel-img\"\n        imgsrc={this.state.response1.image}\n        cardTitle=\"hotel-name\"\n        nameEntry={this.state.response1.name}\n        value=\"hotels\"\n        btnName=\"hotel\"\n        contentID=\"hotel-info\"\n        title=\"hotel-title\"\n        rating=\"hotel-rating\"\n        ratingEntry={this.state.response1.rating}\n        price=\"hotel-price\"\n        priceEntry={this.state.response1.price}\n        url=\"hotel-url\"\n        urlEntry={this.state.response1.url}\n      >\n        >\n      </Card>\n    ];\n  }\n}\nexport default CardContainer;\n"]},"metadata":{},"sourceType":"module"}