{"version":3,"sources":["components/Modal/modal.js","components/header/header.js","components/footer/footer.js","components/Form/index.js","components/DropDown/index.js","utils/API.js","components/InputAutoFlight/index.js","components/AutocompleteFlight/index.js","components/SearchForm/index.js","components/SearchContainer/index.js","components/Card/WeatherCard.js","components/Card/Weather.js","components/Card/YelpCard/Card.js","components/Card/YelpCard/collectionCard.js","components/Card/YelpCard/cardContainer.js","components/Card/YelpCard/collectionContainer.js","App.js","index.js","components/assets/images/teeny_logo.png"],"names":["useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","TransitionsModal","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","open","setOpen","react_default","a","createElement","type","onClick","Modal","aria-labelledby","aria-describedby","className","onClose","closeAfterTransition","BackdropProps","timeout","Fade","in","src","Logo","alt","id","name","placeholder","href","Header","style","maxWidth","Footer","height","width","borderTop","textAlign","position","left","bottom","color","InputDrive","props","assign","htmlFor","InputDate","FormBtn","DropDown","state","travelChoice","handleDropClick","event","preventDefault","travelMode","target","getAttribute","_this","setState","elems","document","querySelectorAll","M","Datepicker","init","Dropdown","this","data-target","data-value","tabIndex","components_SearchForm","dropcb","searchContaincb","Component","googleSearch","formattedAddress","axios","get","configYelp","headers","Authorization","yelpSearch","term","long","lat","suggestions","label","keyInd","renderInputComponent","inputProps","_inputProps$inputRef","inputRef","ref","other","objectWithoutProperties","TextField","fullWidth","InputProps","disableUnderline","startAdornment","InputAdornment","FlightLand_default","node","input","renderSuggestion","suggestion","_ref","query","isHighlighted","matches","match","parts","parse","MenuItem","selected","component","map","part","index","key","fontWeight","highlight","text","getSuggestionValue","console","log","root","flexGrow","container","suggestionsContainerOpen","zIndex","marginTop","right","suggestionsList","margin","listStyleType","divider","IntegrationAutosuggest","_React$useState3","single","popper","_React$useState4","_React$useState5","_React$useState6","stateSuggestions","setSuggestions","autosuggestProps","onSuggestionsFetchRequested","_ref2","value","inputValue","deburr","trim","toLowerCase","inputLength","length","count","filter","keep","slice","getSuggestions","onSuggestionsClearRequested","dist_default","onChange","_ref3","newValue","searchFormcb","objectSpread","defineProperty","renderSuggestionsContainer","options","Paper","containerProps","square","children","SearchForm","airport","address","date","coordLoc","airportList","handleOnClick","getCoordinates","handleOnBlur","_event$target","handleOnChange","handleDateChange","_event$target2","transportMode","cb","replace","then","response","coordLat","data","results","geometry","location","coordLong","lng","catch","err","callbackFunction","autocompleteInput","_this2","datePicker","getElementById","addEventListener","onBlur","SearchContainer","handleOnchange","components_DropDown","appcb","WeatherCard","img","day","description","temperature","wind","humidity","WeatherCardContainer","result","submit","isLoaded","error","list","_this$state","message","Card_WeatherCard","dt_txt","weather","icon","main","temp","speed","Card","imgsrc","cardTitle","nameEntry","btnName","contentID","title","rating","ratingEntry","price","priceEntry","urlEntry","url","CollectionCard","class","urlplaceholder","distance","CardContainer","response1","response2","response3","searchYelp","search","call1","call2","coffeeInfo","businesses","image","image_url","categories","hotelsInfo","restaurantsInfo","parentState","searchContainInput","YelpCard_Card","App","airportInfo","searchLocation","header_header","footer","components_SearchContainer","Weather","cardContainer","ReactDOM","render","BrowserRouter","src_App","querySelector","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.a84f48c3.chunk.js","sourcesContent":["import React from \"react\";\nimport Logo from \"../assets/images/teeny_logo.png\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nexport default function TransitionsModal() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <button type=\"button\" onClick={handleOpen}>\n        Login\n      </button>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        //BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n          <img src={ Logo } className=\"responsive-img\" alt=\"Logo\" />\n            <h2 id=\"transition-modal-title\">User Login</h2>\n            <p id=\"transition-modal-description\">\n              Please log in below.\n            </p>\n            <form>\n                  <div className=\"input-group mb-3\">\n                    <div className=\"input-group-append\">\n                      <span className=\"input-group-text\"><i className=\"fas fa-user\" /></span>\n                    </div>\n                    <input type=\"text\" name className=\"form-control input_user\" id=\"emailInput\" placeholder=\"Username\" />\n                  </div>\n                  <div className=\"input-group mb-2\">\n                    <div className=\"input-group-append\">\n                      <span className=\"input-group-text\"><i className=\"fas fa-key\" /></span>\n                    </div>\n                    <input type=\"password\" name className=\"form-control input_pass\" id=\"passwordInput\" placeholder=\"Password\" />\n                  </div>\n                  <div className=\"form-group\">\n                    <div className=\"custom-control custom-checkbox\">\n                      <label className=\"container\">Remember me </label>\n                      <input type=\"checkbox\" className=\"custom-control-input\" id=\"customControlInline\" />\n                      <span className=\"checkmark\" />\n                    </div>\n                  </div>\n                </form>\n                <button type=\"button\" name=\"button\" id=\"loginButton\" className=\"btn login_btn\">Login</button>\n                <div className=\"d-flex justify-content-center links\">\n                  Don't have an account? <a href=\"/signup\" className=\"ml-2\">Sign Up!</a>\n                </div>\n                <div className=\"d-flex justify-content-center links\">\n\t\t\t\t\t\t<a href=\"#\">Forgot your password?</a>\n\t\t\t\t\t</div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Logo from \"../assets/images/teeny_logo.png\";\nimport Modal from \"../Modal/modal\";\n  // unsure how to join modal and header components together\nimport \"./header.css\";\n\n function Header () {\n        return (\n            <div>\n                <nav>\n                    <div className=\"nav-wrapper\">\n                        <a href=\"#!\" className=\"brand-logo\"><img src={Logo} className=\"responsive-img\"  alt=\"A tiny blue suitcase with a sock and heart boxers bursting out represents the logo of travelRush\" style={{ maxWidth: '150px' }} /></a>\n                        <a href=\"#!\" className=\"brand-logo center\">travelRush</a>\n                        <ul className=\"right hide-on-med-and-down\">\n                        <li><Modal /></li>\n                            {/* <li><a href=\"#!\">LOGIN</a></li> */}\n                        </ul>\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n\n\nexport default Header;\n//index.js:1437 Warning: Invalid value for prop `href` on <a> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://fb.me/react-attribute-behavior\n// in a (at header.js:14)\n// in li (at header.js:14)\n// in ul (at header.js:13)\n// in div (at header.js:10)\n// in nav (at header.js:9)\n// in div (at header.js:8)\n// in Header (at App.js:30)\n\n\n\n\n\n\n\n\n","import React from \"react\";\nimport \"./Footer.css\";\n\nfunction Footer() {\n    return (\n        <div>\n            <div style={{display: 'block', padding: '20px', height: '60px', width: '100%',}} />\n            <div style={{borderTop: \"1px solid #E7E7E7\",\n    textAlign: \"center\",\n    padding: \"20px\",\n    position: \"fixed\",\n    left: \"0\",\n    bottom: \"0\",\n    color: \"white\",\n    backgroundColor: \" rgb(125, 141, 191)\",\n    height: \"60px\",\n    width: \"100%\",}}> Copyright &#169; DOJ 2019\n                \n            </div>\n        </div>\n    )\n}\nexport default Footer;","import React from \"react\";\nimport M from \"materialize-css\";\n// import \"date-fns\";\n// import Grid from \"@material-ui/core/Grid\";\n// import DateFnsUtils from \"@date-io/date-fns\";\n// import {\n//   MuiPickersUtilsProvider,\n//   KeyboardTimePicker,\n//   KeyboardDatePicker\n// } from \"@material-ui/pickers\";\n\n// This file exports the various inputs and FormBtn components\n\nexport function InputFlight(props) {\n  return (\n    <div>\n      <div className=\"input-field col s6\">\n        <i className=\"material-icons prefix\">flight_land</i>\n        <input\n          {...props}\n          id=\"airport\"\n          type=\"text\"\n          className=\"autocomplete validate\"\n        ></input>\n        <label htmlFor=\"autocomplete-airport\"></label>\n      </div>\n    </div>\n  );\n}\n\nexport function InputDrive(props) {\n  return (\n    <div>\n      <div className=\"input-field col s6\">\n        <i className=\"material-icons prefix\">directions_car</i>\n        <input {...props} id=\"address\" type=\"text\" className=\"validate\"></input>\n        <label htmlFor=\"address\"></label>\n      </div>\n    </div>\n  );\n}\n\n// const handleDateChange = e => {\n//   const onSelect = selectedDate => {\n//     console.log(selectedDate);\n//   };\n//   const elems = document.querySelectorAll(\".datepicker\");\n//   const instances = M.Datepicker.init(elems, onSelect);\n//   console.log(\"I am here....\");\n//   //console.log(\"DATE\", e.target.value);\n// };\n\nexport function InputDate(props) {\n  //console.log(props);\n  return (\n    <div>\n      <div className=\"input-field col s6\">\n        <i className=\"material-icons prefix\">date_range</i>\n\n        {/* <DatePicker\n          label=\"Basic example\"\n          value={Date()}\n\n          animateYearScrolling\n        /> */}\n        <input id=\"date\" {...props} type=\"text\" className=\"datepicker\"></input>\n      </div>\n    </div>\n  );\n}\n\n// export default function MaterialUIPickers() {\n//   // The first commit of Material-UI\n//   const [selectedDate, setSelectedDate] = React.useState(new Date());\n\n//   function handleDateChange(date) {\n//     setSelectedDate(date);\n//   }\n\n//   return (\n//     <MuiPickersUtilsProvider utils={DateFnsUtils}>\n//       <Grid container justify=\"space-around\">\n//         <KeyboardDatePicker\n//           disableToolbar\n//           variant=\"inline\"\n//           format=\"MM/dd/yyyy\"\n//           margin=\"normal\"\n//           id=\"date-picker-inline\"\n//           label=\"Date picker inline\"\n//           value={selectedDate}\n//           onChange={handleDateChange}\n//           KeyboardButtonProps={{\n//             \"aria-label\": \"change date\"\n//           }}\n//         />\n//       </Grid>\n//     </MuiPickersUtilsProvider>\n//   );\n// }\n\nexport function FormBtn(props) {\n  return (\n    <button\n      {...props}\n      className=\"btn waves-effect waves-light\"\n      type=\"submit\"\n      name=\"action\"\n    >\n      Submit\n      <i className=\"material-icons right\">send</i>\n    </button>\n  );\n}\n\n/*\n<DropDown>onChange={this.handleDropChange}</DropDown>\n        <Form\n          ref={flyForm => {\n            this.optionsFly = flyForm;\n          }}\n          onChange={this.handleOnChange}\n        ></Form>\n        <Form\n          ref={driveForm => {\n            this.optionsDrive = driveForm;\n          }}\n          onChange={this.handleOnChange}\n        ></Form>\n        <Form onChange={this.handleOnChange}></Form>\n        <Button onClick={this.handleOnChange}></Button>*/\n","import React, { Component } from \"react\";\nimport SearchForm from \"../SearchForm\";\nimport M from \"materialize-css\";\n//import \"materialize-css/dist/css/materialize.min.css\";\n\nclass DropDown extends React.Component {\n  state = {\n    travelChoice: \"0\"\n    // airport: \"\",\n    // address: \"\",\n    // date: \"\",\n    // coordLoc: { long: 0, lat: 0 }\n  };\n\n  componentDidMount() {\n    // document.addEventListener(\"DOMContentLoaded\", function() {\n    const elems = document.querySelectorAll(\".dropdown-trigger\");\n    const instances = M.Dropdown.init(elems);\n    // });\n    //M.AutoInit();\n\n    //send user input to call back in search container\n    //this.props.searchContaincb(this.state);\n  }\n\n  handleDropClick = event => {\n    //prevent default behavior\n\n    event.preventDefault();\n\n    const travelMode = event.target.getAttribute(\"data-value\");\n    //M.AutoInit();\n    this.setState({ travelChoice: travelMode }, () => {\n      //M.AutoInit();\n      // document.addEventListener(\"DOMContentLoaded\", function() {\n      /*const onSelect = selectedDate => {\n        console.log(selectedDate);\n      };*/\n      //Initialize datepicker\n      const elems = document.querySelectorAll(\".datepicker\");\n      const instances = M.Datepicker.init(elems);\n      //Initialize autocomplete\n      /*const elements = document.querySelectorAll(\".autocomplete\");\n      const insts = M.Autocomplete.init(elements);*/\n\n      // });\n    });\n  };\n\n  // callbackFunction = searchFormInputs => {\n  //   this.setState({ searchFormInputs });\n  // };\n\n  //How does button component know to submit my two forms?\n  render() {\n    return (\n      <div>\n        <div className=\"row center\">\n          {this.state.travelChoice === \"0\" ? (\n            <span>\n              <h5 className=\"center-align\">Search By:</h5>\n            </span>\n          ) : (\n            \"\"\n          )}\n\n          <a className=\"dropdown-trigger btn\" href=\"#\" data-target=\"dropdown1\">\n            Airport/Address\n          </a>\n\n          <ul id=\"dropdown1\" className=\"dropdown-content\">\n            <li>\n              <a href=\"#!\" data-value=\"1\" onClick={this.handleDropClick}>\n                By airport\n              </a>\n            </li>\n            <li className=\"divider\" tabIndex=\"-1\"></li>\n            <li>\n              <a href=\"#!\" data-value=\"2\" onClick={this.handleDropClick}>\n                By address\n              </a>\n            </li>\n          </ul>\n        </div>\n        {this.state.travelChoice === \"0\" ? (\n          \"\"\n        ) : (\n          <SearchForm\n            travelMode={this.state.travelChoice}\n            dropcb={this.props.searchContaincb}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default DropDown;\n\n/*\n    if (this.event.target.getAttribute(\"data-value\") === \"1\") {\n      //If user chose to fly, then hide `Form` for the destination address\n      \n      //this.optionDrive.style.display = \"none\";\n    } else if (this.event.target.getAttribute(data - value) === \"2\") {\n      //If user chose to drive, then hide `Form` for the airport address\n      this.optionFly.style.display = \"none\";\n    }\n  };*/\n// This file exports the Input, TextArea, and FormBtn components\n/*\nexport function DropDown(props) {\n  return (\n    <div class=\"input-field col s12\">\n      <select>\n        <option value=\"\" disabled selected>\n          Choose your travel preference\n        </option>\n        <option value=\"1\">Flight</option>\n        <option value=\"2\">Drive</option>\n      </select>\n      <label>Materialize Select</label>\n    </div>\n  );\n}*/\n\n/*<DropDown>onChange={this.handleDropChange}</DropDown>\n        <Form\n          ref={flyForm => {\n            this.optionsFly = flyForm;\n          }}\n          onChange={this.handleOnChange}\n        ></Form>\n        <Form\n          ref={driveForm => {\n            this.optionsDrive = driveForm;\n          }}\n          onChange={this.handleOnChange}\n        ></Form>\n        <Form onChange={this.handleOnChange}></Form>\n\n        <Button onClick={this.handleOnChange}></Button>*/\n","//adding API queries for app here\nimport axios from \"axios\";\n\n//URL and API key for google API\nconst googleURL = \"https://maps.googleapis.com/maps/api/geocode/json?address=\";\nconst googleKEY = \"AIzaSyCqOAF-sXj7Q5MxZzQTBIDyjHYSfVD_WT0\";\n\n//google api query export\nexport const googleSearch = formattedAddress => {\n  return axios.get(googleURL + formattedAddress + \"&key=\" + googleKEY);\n};\n\n//URL and API key for airportFinder API\nconst airportFinderURL =\n  \"https://cometari-airportsfinder-v1.p.rapidapi.com/api/airports/by-radius?radius=50&lng=\";\nconst config = {\n  headers: {\n    \"X-RapidAPI-Host\": \"cometari-airportsfinder-v1.p.rapidapi.com\",\n    \"X-RapidAPI-Key\": \"f60e32620bmsh0545e1c4b416f30p1425cdjsn99e5174ad055\"\n  }\n};\n\n//airportFinder api query export\n//note to Dupe - had to change the placeholders for longitude and latitude from coordLoc.long and coordLoc.lat to just long and lat, so coordLoc.long and coordLoc.lat will have to have to be saved in long and lat vars\nexport const airportFinderSearch = (long, lat) => {\n  return axios.get(airportFinderURL + long + \"&lat=\" + lat, config);\n};\n\n//URL and API key for yelp API\nconst yelpURL =\n  \"https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=\";\nconst yelpAPIKey =\n  \"NNn_iZkgwcsoXyb1LwNcwgRAiCL8c3RkazAkRcQueV0e5b0lZNV-SGGIeosL3AiABzN0_PsQasfbyA8BkbNTjHr-RiTH3sKFAPyB8SCmQInth1SBzlW1uhiuBsr5XHYx\";\nconst configYelp = {\n  headers: {\n    Authorization: \"Bearer \" + yelpAPIKey\n  }\n};\n\nexport const yelpSearch = (term, long, lat) => {\n  return axios.get(\n    yelpURL + term + \"&latitude=\" + lat + \"&longitude=\" + long + \"&limit=10\",\n    configYelp\n  );\n};\n\n//URL and API key for openweathermap API\nconst weatherURL = \"https://api.openweathermap.org/data/2.5/forecast?lat=\";\nconst weatherAPIKey = \"61fb0fbf5b4af7a73cbae239fe1b3fbf\";\n\nexport const weatherSearch = (long, lat) => {\n  return axios.get(\n    weatherURL +\n      lat +\n      \"&lon=\" +\n      long +\n      \"&units=imperial&mode=json&appid=\" +\n      weatherAPIKey\n  );\n};\n\n// Gets all airports list that will be used for the autocomplete. NOT WORKING YET!!!\nexport const airportsList = () => {\n  return axios.get(\"/api/airport\");\n};\n\n//SERVER IS ON 3001 BUT REACT APP IS IN 3000????\n","import React, { Component } from \"react\";\nimport M from \"materialize-css\";\n\nclass InputAutoFlight extends Component {\n  state = {\n    airport: \"\",\n    address: \"\",\n    date: \"\"\n  };\n\n  componentDidMount() {\n    // let tesData = {\n    //   Apples: null,\n    //   Oranges: null,\n    //   Grapes: null,\n    //   Strawberries: null\n    // };\n    // //console.log(JSON.stringify(tesData));\n    // tesData = JSON.stringify(tesData);\n    // console.log(tesData);\n    // // document.addEventListener(\"DOMContentLoaded\", function() {\n    // const elems = document.querySelectorAll(\".autocomplete\");\n    // console.log(elems[0]);\n    // const instances = M.Autocomplete.init(elems, {\n    //   data: tesData\n    // });\n    // console.log(instances);\n    // // });\n  }\n\n  handleOnClick = event => {\n    //prevent default behavior\n    event.preventDefault();\n    //Now do the necessary API calls....\n    //Remember that the state has the necessary inputs/search parameters.\n  };\n\n  handleOnchange = event => {\n    //   const {\n    //     target: { name, value }\n    //   } = event;\n    //   this.setState({ [name]: value }).catch(err => console.log(\"error\"));\n    // };\n    //how do I get the state variables from the SearchForm???\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <div className=\"input-field col s6\">\n              <i className=\"material-icons prefix\">flight_land</i>\n              <input\n                type=\"text\"\n                id=\"autocomplete-input\"\n                className=\"autocomplete\"\n              />\n              <label htmlFor=\"autocomplete-input\">Autocomplete</label>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InputAutoFlight;\n","import React from \"react\";\nimport deburr from \"lodash/deburr\";\nimport Autosuggest from \"react-autosuggest\";\nimport match from \"autosuggest-highlight/match\";\nimport parse from \"autosuggest-highlight/parse\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Popper from \"@material-ui/core/Popper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n//import Icon from \"@material-ui/core/Icon\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FlightLand from \"@material-ui/icons/FlightLand\";\nimport {\n  airportsList,\n  airportFinderSearch,\n  googleSearch\n} from \"../../utils/API.js\";\n//flight_land\n\n//use API to set suggestions to airport names\n// const suggestions = [];\n\n// console.log(\"I am in Autosuggest!!!\");\n// airportsList()\n//   .then(res => {\n//     console.log(res);\n//     for (let i = 0; i < airportsList().length; i++) {\n//       suggestions.push({\n//         label:\n//           airportsList.city +\n//           \", \" +\n//           airportsList.stateCode +\n//           \"(\" +\n//           airportsList.code +\n//           \" - \" +\n//           airportsList.name +\n//           \")\"\n//       });\n//     }\n//   })\n//   .catch(err => console.log(JSON.parse(JSON.stringify(err))));\n\n//console.log(suggestions);\n// const suggestions = [\n//   { label: \"Afghanistan\" },\n//   { label: \"Aland Islands\" },\n//   { label: \"Albania\" },\n//   { label: \"Algeria\" },\n//   { label: \"American Samoa\" },\n//   { label: \"Andorra\" },\n//   { label: \"Angola\" },\n//   { label: \"Anguilla\" },\n//   { label: \"Antarctica\" },\n//   { label: \"Antigua and Barbuda\" },\n//   { label: \"Argentina\" },\n//   { label: \"Armenia\" },\n//   { label: \"Aruba\" },\n//   { label: \"Australia\" },\n//   { label: \"Austria\" },\n//   { label: \"Azerbaijan\" },\n//   { label: \"Bahamas\" },\n//   { label: \"Bahrain\" },\n//   { label: \"Bangladesh\" },\n//   { label: \"Barbados\" },\n//   { label: \"Belarus\" },\n//   { label: \"Belgium\" },\n//   { label: \"Belize\" },\n//   { label: \"Benin\" },\n//   { label: \"Bermuda\" },\n//   { label: \"Bhutan\" },\n//   { label: \"Bolivia, Plurinational State of\" },\n//   { label: \"Bonaire, Sint Eustatius and Saba\" },\n//   { label: \"Bosnia and Herzegovina\" },\n//   { label: \"Botswana\" },\n//   { label: \"Bouvet Island\" },\n//   { label: \"Brazil\" },\n//   { label: \"British Indian Ocean Territory\" },\n//   { label: \"Brunei Darussalam\" }\n// ];\n\n// const suggestions = [\n//   { label: \"Los Angeles, CA, (LAX - Los Angeles Intl)\" },\n//   { label: \"Houston, TX, (IAH - George Bush Intercontinental/Houston)\" },\n//   { label: \"Ontario, CA, (ONT - Ontario Intl)\" },\n//   { label: \"Houston, TX, (HOU - William P Hobby)\" },\n//   { label: \"Santa Ana, CA, (SNA - John Wayne Airport- Orange County)\" },\n//   { label: \"Phoenix, AZ, (PHX- Phoenix Sky Harbor Intl)\" },\n//   { label: \"Miami, FL, (MIA - Miami Intl)\" },\n//   { label: \"Atlanta, GA, (ATL - Hartsfield-Jackson Atlanta Intl)\" },\n//   { label: \"Chicago, IL, (ORD - Chicago O'Hare Intl)\" },\n//   { label: \"New York, NY, (JFK - John F Kennedy Intl)\" },\n//   { label: \"New York, NY, (LGA - Laguardia Intl)\" },\n//   { label: \"Philadelphia, PA, (PHL - Philadelphia Intl)\" },\n//   { label: \"Salt Lake City, UT, (SLC - Salt Lake City Intl)\" },\n//   { label: \"Seattle, WA, (SEA - Seattle-Tacoma Intl)\" },\n//   { label: \"Newark, NJ, (EWR - Newark Liberty Intl)\" },\n//   { label: \"Dallas-Fort Worth, TX, (DFW - Dallas-Fort Worth Intl)\" },\n//   { label: \"Denver, CO, (DEN - Denver Intl)\" },\n//   { label: \"San Francisco, CA, (SFO - San Francisco Intl)\" },\n//   { label: \"Las Vegas, NV, (LAS - McCarran Intl)\" },\n//   { label: \"Orlando, FL, (MCO - Orlando Intl)\" },\n//   { label: \"Belarus\" },\n//   { label: \"Belgium\" },\n//   { label: \"Belize\" },\n//   { label: \"Benin\" },\n//   { label: \"Bermuda\" },\n//   { label: \"Bhutan\" },\n//   { label: \"Bolivia, Plurinational State of\" },\n//   { label: \"Bonaire, Sint Eustatius and Saba\" },\n//   { label: \"Bosnia and Herzegovina\" },\n//   { label: \"Botswana\" },\n//   { label: \"Bouvet Island\" },\n//   { label: \"Brazil\" },\n//   { label: \"British Indian Ocean Territory\" },\n//   { label: \"Brunei Darussalam\" }\n// ];\n\nconst suggestions = [\n  { label: \"Los Angeles, CA, (LAX Los Angeles Intl)\", keyInd: \"1\" },\n  {\n    label: \"Houston, TX, (IAH George Bush Intercontinental/Houston)\",\n    keyInd: \"2\"\n  },\n  { label: \"Ontario, CA, (ONT Ontario Intl)\", keyInd: \"3\" },\n  { label: \"Houston, TX, (HOU William P Hobby)\", keyInd: \"4\" },\n  {\n    label: \"Santa Ana, CA, (SNA John Wayne Airport Orange County)\",\n    keyInd: \"5\"\n  },\n  { label: \"Phoenix, AZ, (PH Phoenix Sky Harbor Intl)\", keyInd: \"6\" },\n  { label: \"Miami, FL, (MIA Miami Intl)\", keyInd: \"7\" },\n  { label: \"Atlanta, GA, (ATL Hartsfield Jackson Atlanta Intl)\", keyInd: \"8\" },\n  { label: \"Chicago, IL, (ORD Chicago O'Hare Intl)\", keyInd: \"9\" },\n  { label: \"New York, NY, (JFK John F Kennedy Intl)\", keyInd: \"10\" },\n  { label: \"New York, NY, (LGA Laguardia Intl)\", keyInd: \"11\" },\n  { label: \"Philadelphia, PA, (PHL Philadelphia Intl)\", keyInd: \"12\" },\n  { label: \"Salt Lake City, UT, (SLC Salt Lake City Intl)\", keyInd: \"13\" },\n  { label: \"Seattle, WA, (SEA Seattle Tacoma Intl)\", keyInd: \"14\" },\n  { label: \"Newark, NJ, (EWR Newark Liberty Intl)\", keyInd: \"15\" },\n  {\n    label: \"Dallas Fort Worth, TX, (DFW Dallas Fort Worth Intl)\",\n    keyInd: \"16\"\n  },\n  { label: \"Denver, CO, (DEN Denver Intl)\", keyInd: \"17\" },\n  { label: \"San Francisco, CA, (SFO San Francisco Intl)\", keyInd: \"18\" },\n  { label: \"Las Vegas, NV, (LAS McCarran Intl)\", keyInd: \"19\" },\n  { label: \"Orlando, FL, (MCO Orlando Intl)\", keyInd: \"20\" }\n];\n\nconsole.log(typeof suggestions);\n\nfunction renderInputComponent(inputProps) {\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps;\n\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        disableUnderline: true,\n        startAdornment: (\n          <InputAdornment position=\"start\">\n            <FlightLand />\n          </InputAdornment>\n        ),\n        inputRef: node => {\n          ref(node);\n          inputRef(node);\n        },\n        classes: {\n          input: classes.input\n        }\n      }}\n      {...other}\n    />\n  );\n}\n// InputProps={{\n//   disableUnderline: true,\n//  }}\n/* DISPLAYS A SUGGESTION THAT MATCHES THE USER INPUT(QUERY), \nWITH THE MATCHED PORTION OF THE SUGGESTION HIGHLIGHTED. */\n\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\n  const matches = match(suggestion.label, query);\n  const parts = parse(suggestion.label, matches);\n\n  return (\n    <MenuItem selected={isHighlighted} component=\"div\">\n      <div>\n        {parts.map((part, index) => (\n          <span key={index} style={{ fontWeight: part.highlight ? 500 : 400 }}>\n            {part.text}\n          </span>\n        ))}\n      </div>\n    </MenuItem>\n  );\n}\n//GETS THE ARRAY OF SUGGESTIONS BASED ON USER INPUT(VALUE)\nfunction getSuggestions(value) {\n  const inputValue = deburr(value.trim()).toLowerCase();\n  const inputLength = inputValue.length;\n  let count = 0;\n\n  return inputLength === 0\n    ? []\n    : suggestions.filter(suggestion => {\n        const keep =\n          count < 5 &&\n          suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n        if (keep) {\n          count += 1;\n        }\n\n        return keep;\n      });\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.label;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // height: 250,\n    flexGrow: 1\n  },\n  container: {\n    position: \"relative\"\n  },\n  suggestionsContainerOpen: {\n    position: \"absolute\",\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0\n  },\n  suggestion: {\n    display: \"block\"\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: \"none\"\n  },\n  divider: {\n    height: theme.spacing(2)\n  }\n}));\n\nexport default function IntegrationAutosuggest(props) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [state, setState] = React.useState({\n    single: \"\",\n    popper: \"\"\n  });\n\n  const [stateSuggestions, setSuggestions] = React.useState([]);\n\n  const handleSuggestionsFetchRequested = ({ value }) => {\n    setSuggestions(getSuggestions(value));\n  };\n\n  const handleSuggestionsClearRequested = () => {\n    setSuggestions([]);\n  };\n\n  const handleChange = name => (event, { newValue }) => {\n    console.log(newValue); //USER INPUT IS RIGHT HERE!!!! SEND THIS AS A PROP TO THE SEARCHFORM CONTAINER****\n    props.searchFormcb(newValue);\n    setState({\n      ...state,\n      [name]: newValue\n    });\n  };\n\n  const autosuggestProps = {\n    renderInputComponent,\n    suggestions: stateSuggestions,\n    onSuggestionsFetchRequested: handleSuggestionsFetchRequested,\n    onSuggestionsClearRequested: handleSuggestionsClearRequested,\n    getSuggestionValue,\n    renderSuggestion\n  };\n\n  return (\n    <div className={classes.root}>\n      <Autosuggest\n        {...autosuggestProps}\n        inputProps={{\n          classes,\n          id: \"react-autosuggest-simple\",\n          label: \"Country\",\n          placeholder: \"Search a country (start with a)\",\n          value: state.single,\n          onChange: handleChange(\"single\")\n        }}\n        theme={{\n          container: classes.container,\n          suggestionsContainerOpen: classes.suggestionsContainerOpen,\n          suggestionsList: classes.suggestionsList,\n          suggestion: classes.suggestion\n        }}\n        renderSuggestionsContainer={options => (\n          <Paper {...options.containerProps} square>\n            {options.children}\n          </Paper>\n        )}\n      />\n      <div className={classes.divider} />\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { InputFlight, InputDrive, InputDate, FormBtn } from \"../Form\";\nimport DropDown from \"../DropDown\";\nimport { airportFinderSearch, googleSearch } from \"../../utils/API.js\";\nimport InputAutoFlight from \"../InputAutoFlight\";\nimport AutocompleteFlight from \"../AutocompleteFlight\";\n\n//import ImageCard, { Button } from \"./components/Button\";\n//import NavBar, { DropDown } from \"./components/DropDown\";\n//import Form from \"./components/Form\";\n//import images from \"./images.json\";\n//import \"./App.css\";\n\nclass SearchForm extends Component {\n  state = {\n    airport: \"\",\n    address: \"\",\n    date: \"\",\n    coordLoc: { long: 0, lat: 0 },\n    airportList: []\n  };\n\n  componentDidMount() {\n    const datePicker = document.getElementById(\"date\");\n    console.log(datePicker);\n    //handle change for the date\n    datePicker.addEventListener(\"change\", () => {\n      this.setState({ date: datePicker.value });\n      console.log(this.state.date);\n    });\n    // const autocompleteFly = document.getElementById(\"airport\");\n    // console.log(autoCompleteFly);\n    //handle change for the flight\n  }\n\n  handleOnClick = event => {\n    //prevent default behavior\n    event.preventDefault();\n    //**MAKE SURE THAT THE SUBMIT BUTTON DOESN'T EXECUTE UNLESS THE USER HAS SUPPLIED THE REQUIRED INPUTS! **/\n    //Now do the necessary API calls....\n    //Remember that the state has the necessary inputs/search parameters.\n    //console.log(this.state);\n    //API calls\n    //return this.state;\n    console.log(\"Travel mode is \" + this.props.travelMode);\n    if (this.props.travelMode === \"1\") {\n      //airport\n      this.getCoordinates(\"airport\");\n    } else if (this.props.travelMode === \"2\") {\n      //address\n      this.getCoordinates(\"address\");\n    }\n  };\n  //handles address input by extracting and updating its coordinates\n  handleOnBlur = event => {\n    const {\n      target: { name, value }\n    } = event;\n    console.log(\"I am inside blur event\");\n    console.log(name);\n    console.log(value);\n    this.setState({ [name]: value });\n    //.catch(err => console.log(\"error\"));\n  };\n\n  // handleOnSelect = event => {\n  //   const {\n  //     target: { name, value }\n  //   } = event;\n  //console.log(name);\n\n  // console.log(\"I am inside the select event\");\n  // console.log(event.target);\n  //console.log(name);\n  //console.log(value);\n  //this.setState({ [name]: value });\n  //console.log(event.target.textContent);\n  //.catch(err => console.log(\"error\"));\n  // };\n  handleOnChange = event => {\n    console.log(\"I am inside change event\");\n    console.log(event.target.name);\n    console.log(event.target.value);\n  };\n\n  //Handles the date input\n  handleDateChange = event => {\n    //console.log(\"I am inside the date event\");\n    const {\n      target: { name, value }\n    } = event;\n    this.setState({ [name]: value }, () => {\n      console.log(event.target.value);\n    });\n  };\n\n  // getAirport = airport => {\n  //   //Use Airport finder API to get list of airports\n  //   airportFinderSearch(this.state.coordLoc.long, this.state.coordLoc.lat)\n  //     .then()\n  //     .catch(err => console.log(err));\n  // };\n\n  //Helper function to get the coordinates for an address or airport.\n  getCoordinates = (transportMode, cb) => {\n    //Use geocoding API to get address\n    // let indexOfComma = this.state.address.indexOf(\",\");\n    // let queryCity = this.state.address.substring(0, indexOfComma);\n    // queryCity = queryCity.replace(\" \", \"+\");\n    // let queryState = this.state.address.substring(indexOfComma + 2);\n    // queryState = queryState.replace(\" \", \"+\");\n    let formattedAddress;\n    if (transportMode === \"airport\") {\n      formattedAddress = this.state.airport.replace(\" \", \"+\");\n    } else {\n      formattedAddress = this.state.address.replace(\" \", \"+\");\n    }\n\n    googleSearch(formattedAddress)\n      .then(response => {\n        console.log(response);\n        let coordLat = response.data.results[0].geometry.location.lat;\n        let coordLong = response.data.results[0].geometry.location.lng;\n        //console.log(response.data.results);\n        this.setState({ coordLoc: { long: coordLong, lat: coordLat } }, () => {\n          console.log(this.state.coordLoc);\n          this.props.dropcb(this.state);\n          console.log(\"Checking state\", this.state);\n        });\n      })\n      .catch(err => console.log(err));\n\n    //1043 Santo Antonio drive, Colton, CA 92324\n  };\n\n  //Call back function passes airport input from the Autocomplete component(child to parent data flow).\n  callbackFunction = autocompleteInput => {\n    this.setState({ airport: autocompleteInput });\n  };\n\n  /*\n  handleDropClick = event => {\n    //prevent default behavior\n    event.preventDefault();\n    if (this.event.target.getAttribute(data - value) === \"1\") {\n      //If user chose to fly, then hide `Form` for the destination address\n      this.optionDrive.style.display = \"none\";\n    } else if (this.event.target.getAttribute(data - value) === \"2\") {\n      //If user chose to drive, then hide `Form` for the airport address\n      this.optionFly.style.display = \"none\";\n    }\n  };*/\n  //How does button component know to submit my two forms?\n  render() {\n    return (\n      <div>\n        <form className=\"col s12\">\n          <div className=\"row\">\n            {this.props.travelMode === \"1\" ? (\n              <div className=\"col s6\">\n                <AutocompleteFlight\n                  searchFormcb={this.callbackFunction}\n                ></AutocompleteFlight>\n              </div>\n            ) : (\n              <InputDrive\n                address={this.state.address}\n                onBlur={this.handleOnBlur}\n                name=\"address\"\n              ></InputDrive>\n            )}\n            <InputDate\n              date={this.state.date}\n              value={this.state.date}\n              onChange={this.handleDateChange}\n              name=\"date\"\n            ></InputDate>\n          </div>\n          <div className=\"row\">\n            <div className=\"col offset-s6\">\n              <FormBtn onClick={this.handleOnClick}></FormBtn>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchForm;\n\n/* render() {\n    return (\n      <div>\n        {this.props.data - choice === \"1\" ? (\n          <form className=\"col s12\">\n            <div className=\"row\">\n              <div className=\"input-field col s12\">\n                <textarea\n                  id=\"address-dest\"\n                  className=\"materialize-textarea\"\n                  onChange={handleOnchange}\n                ></textarea>\n                <label for=\"address-dest\">{this.state.airportAddress}</label>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"input-field col s12\">\n                <textarea\n                  id=\"date-dest\"\n                  className=\"materialize-textarea\"\n                  onChange={handleOnchange}\n                ></textarea>\n                <label for=\"date-dest\">{this.state.date}</label>\n              </div>\n            </div>\n            <button\n              className=\"btn waves-effect waves-light\"\n              type=\"submit\"\n              name=\"action\"\n              onClick={handleOnClick}\n            >\n              Submit\n              <i class=\"material-icons right\">flight_takeoff</i>\n            </button>\n          </form>\n        ) : (\n          <form className=\"col s12\">\n            <div className=\"row\">\n              <div className=\"input-field col s12\">\n                <textarea\n                  id=\"address-dest\"\n                  className=\"materialize-textarea\"\n                  onChange={handleOnchange}\n                ></textarea>\n                <label for=\"address-dest\">{this.state.address}</label>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"input-field col s12\">\n                <textarea\n                  id=\"date-dest\"\n                  className=\"materialize-textarea\"\n                  onChange={handleOnchange}\n                ></textarea>\n                <label for=\"date-dest\">{this.state.date}</label>\n              </div>\n            </div>\n            <button\n              className=\"btn waves-effect waves-light\"\n              type=\"submit\"\n              name=\"action\"\n              onClick={handleOnClick}\n            >\n              Submit\n              <i class=\"material-icons right\">flight_takeoff</i>\n            </button>\n          </form>\n        )}\n      </div>\n    );\n  }*/\n","import React, { Component } from \"react\";\nimport SearchForm from \"../SearchForm\";\nimport DropDown from \"../DropDown\";\nimport AutocompleteFlight from \"../AutocompleteFlight\";\n\nclass SearchContainer extends Component {\n  state = {\n    travelChoice: \"0\",\n    airport: \"\",\n    address: \"\",\n    date: \"\",\n    coordLoc: { long: 0, lat: 0 }\n  };\n\n  handleOnClick = event => {\n    //prevent default behavior\n    event.preventDefault();\n    //Now do the necessary API calls....\n    //Remember that the state has the necessary inputs/search parameters.\n  };\n\n  handleOnchange = event => {\n    const {\n      target: { name, value }\n    } = event;\n    this.setState({ [name]: value }).catch(err => console.log(\"error\"));\n  };\n  //call back is used to get user inputs from drop down\n  // callbackFunction = dropInputs => {\n  //   this.setState({ dropInputs }, () => {\n  //     console.log(this.state);\n  //     //send user input to call back in app.js\n  //     this.props.appcb(this.state);\n  //   });\n  // };\n\n  //how do I get the state variables from the SearchForm???\n  render() {\n    return (\n      <div>\n        <DropDown searchContaincb={this.props.appcb}></DropDown>\n      </div>\n    );\n  }\n}\n\nexport default SearchContainer;\n","//Card component to hold weather \n\nimport React from \"react\";\nimport \"./Card.css\";\n\n\n\n\n//import MaterialTable from \"material-table\";\n\n\nconst WeatherCard = props => (\n    <div className=\"card\">\n    <div className=\"card-image\">\n        <img id=\"weather-img\" src={props.img} alt=\"\"></img>\n        <span className=\"card-title\" id=\"weather-name\"></span>\n        <a className=\"btn-floating halfway-fab waves-effect waves-light red\" id=\"more-weather\" value=\"weather\"><i className=\"material-icons\">brightness_5</i></a>\n    </div>\n    <div className=\"card-content\" id=\"weather-results\">\n        <p>Weather</p>\n\n        <table className=\"striped\">\n        <thead>\n          <tr>\n              <th>Date</th>\n              <th>Condition</th>\n              <th>Temp</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          <tr>\n            <td>{props.day}</td>\n            <td>{props.description}</td>\n            <td>{props.temperature} F</td>\n          </tr>\n          </tbody>\n\n          <thead>\n          <tr>\n              <th>Wind</th>\n              <th>Humidity</th>\n          </tr>\n        </thead>\n\n          <tbody>\n          <tr>\n            <td>{props.wind} mph</td>\n            <td>{props.humidity}%</td>\n          </tr>\n\n        </tbody>\n      </table>\n\n\n    </div>\n    <div className=\"card-action\">\n        <a href=\"#\"></a>\n    </div>\n</div>\n);\n\nexport default WeatherCard;\n","import React, { Component } from \"react\";\nimport \"./Card.css\";\nimport WeatherCard from \"./WeatherCard\";\nimport { weatherSearch } from \"../../utils/API\";\n\n\nclass WeatherCardContainer extends Component {\n    state = {\n        result: [],\n        submit: \"\",\n        isLoaded: false,\n        error: null,\n   \n    };\n  \n\n  \n    componentDidMount() {\n        weatherSearch(\"-87.904724\", \"41.978611\").then(response => {\n            console.log(response.data);\n            this.setState({ isLoaded: true, \n                            result: response.data.list});\n        },\n        \n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n            \n          });\n\n        }\n      )\n        \n      }\n  \n    render() {\n      const {error, isLoaded, result} = this.state;\n      if (error) {\n        return <div>Error: {error.message}</div>;\n      } else if (!isLoaded) {\n        return <div>Loading...</div>;\n      } else {\n        if (this.state.result.length > 0)\n\n\n\n\n        return (\n        <div>\n       \n        <WeatherCard\n                  day={this.state.result[1].dt_txt}\n                  description={this.state.result[1].weather[0].description}\n                  icon={this.state.result[1].weather[0].icon}\n                  temperature={this.state.result[1].main.temp}\n                  wind={this.state.result[1].wind.speed}\n                  humidity={this.state.result[1].main.humidity}\n                  >\n\n                  </WeatherCard>\n                  </div>)\n\n\n\n\n      }\n    }\n\n    \n        \n      };\n    \n;\n\n\nexport default WeatherCardContainer; \n\n\n//        if (this.state.result.length > 0)\n//console.log(this.state.result[1].weather[0].description);\n","//Component to hold yelp cards for restaurant, coffee, and weather\nimport React from \"react\";\nimport \"../Card.css\";\n\nconst Card = props => (\n    <div className=\"card\">\n        <div className=\"card-image\">\n            <img id={props.img} src={props.imgsrc} alt=\"\"></img>\n            <span className=\"card-title\" id={props.cardTitle}>{props.nameEntry}</span>\n            <button className=\"btn-floating halfway-fab waves-effect waves-light red\" value={props.value}><i className=\"material-icons\">{props.btnName}</i></button>\n        </div>\n        <div className=\"card-content\" id={props.contentID}>\n            <p id={props.title}>{props.name}</p>\n            <p id={props.rating}>{props.ratingEntry}</p>\n            <p id={props.price}>{props.priceEntry}</p>\n        </div>\n        <div className=\"card-action\">\n            <a href={props.urlEntry} id={props.url} target=\"_blank\">Learn More</a>\n        </div>\n    </div>\n);\nexport default Card;\n","import React from \"react\";\nimport \"../Card.css\";\n\nconst CollectionCard = props => (\n    <div>\n        {/* will I be dynamically generating the collection-items in cardContainer? */}\n        <a class=\"collection-item\" href={props.urlplaceholder} target=\"_blank\">\n        {props.name} | Price: {props.price} | {props.distance} miles away</a>\n           \n        </div>\n);\nexport default CollectionCard;\n","//container to render the first Card component once the api call is made to display the 0 index card\n//container needs to be loaded on searchForm click event - need to pull latitude and longitude from searchForm\nimport React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport CollectionContainer from \"./collectionContainer\"\nimport { yelpSearch } from \"../../../utils/API\";\n\nclass CardContainer extends Component {\n\n    state = {\n        response1: {},\n        response2: {},\n        response3: {},\n    };\n\n    // When this component mounts, search the Yelp API for the corresponding card\n    //replace current long/lat with long/lat from Dupe's SearchForm component\n    //   componentDidMount() {\n    //     console.log(\"I am inside the cardContainer!!!\");\n\n    //     // var call1 = yelpSearch(\n    //     //   \"hotels\",\n    //     //   this.props.parentState.SearchContainInput,\n    //     //   this.props.parentState.SearchContainInput\n    //     // );\n    //     var call1 = yelpSearch(\"hotels\", \"-87.904724\", \"41.978611\");\n    //     var call2 = yelpSearch(\"restaurants\", \"-87.904724\", \"41.978611\");\n    //     var call3 = yelpSearch(\"coffee\", \"-87.904724\", \"41.978611\");\n    //     //how to run all at the same time in instead of having to run one at a time - this way only runs the last one\n    //     call3.then(response3 => {\n    //       //console.log(response3.data);\n\n    //       var coffeeInfo = {\n    //         name: response3.data.businesses[0].name,\n    //         image: response3.data.businesses[0].image_url,\n    //         url: response3.data.businesses[0].url,\n    //         price: response3.data.businesses[0].price,\n    //         rating: response3.data.businesses[0].rating,\n    //         title: response3.data.businesses[0].categories[0].title\n    //       };\n    //       //console.log(coffeeInfo)\n    //       this.setState({ response3: coffeeInfo });\n    //     });\n\n    //     call1.then(response1 => {\n    //       //console.log(response1.data);\n\n    //       var hotelsInfo = {\n    //         name: response1.data.businesses[0].name,\n    //         image: response1.data.businesses[0].image_url,\n    //         url: response1.data.businesses[0].url,\n    //         price: response1.data.businesses[0].price,\n    //         rating: response1.data.businesses[0].rating,\n    //         title: response1.data.businesses[0].categories[0].title\n    //       };\n    //       //console.log(hotelsInfo)\n    //       this.setState({ response1: hotelsInfo });\n    //     });\n\n    //     call2.then(response2 => {\n    //       console.log(response2.data);\n\n    //       var restaurantsInfo = {\n    //         name: response2.data.businesses[0].name,\n    //         image: response2.data.businesses[0].image_url,\n    //         url: response2.data.businesses[0].url,\n    //         price: response2.data.businesses[0].price,\n    //         rating: response2.data.businesses[0].rating,\n    //         title: response2.data.businesses[0].categories[0].title\n    //       };\n    //       console.log(restaurantsInfo);\n    //       this.setState({ response2: restaurantsInfo });\n    //     });\n    //   }\n\n    componentDidUpdate() {\n        if (this.props.parentState && !this.state.search) {\n            const { searchContainInput } = this.props.parentState;\n            this.setState(\n                { search: this.props.parentState }, () => { this.searchYelp() }\n\n            );\n\n        }\n    }\n    searchYelp = search => {\n        console.log(\"checking state in yelp search function\", this.state)\n        //cards are rendering with dummy data, but updated search state is never making it in\n        var call1 = yelpSearch(\"hotels\", this.state.search.coordLoc.long, this.state.search.coordLoc.lat);\n        var call2 = yelpSearch(\"restaurants\", this.state.search.coordLoc.long, this.state.search.coordLoc.lat);\n        var call3 = yelpSearch(\"coffee\", this.state.search.coordLoc.long, this.state.search.coordLoc.lat);\n        call3.then(response3 => {\n            //console.log(response3.data);\n\n            var coffeeInfo = {\n                name: response3.data.businesses[0].name,\n                image: response3.data.businesses[0].image_url,\n                url: response3.data.businesses[0].url,\n                price: response3.data.businesses[0].price,\n                rating: response3.data.businesses[0].rating,\n                title: response3.data.businesses[0].categories[0].title\n            };\n            //console.log(coffeeInfo)\n            this.setState({ response3: coffeeInfo });\n        });\n\n        call1.then(response1 => {\n            //console.log(response1.data);\n\n            var hotelsInfo = {\n                name: response1.data.businesses[0].name,\n                image: response1.data.businesses[0].image_url,\n                url: response1.data.businesses[0].url,\n                price: response1.data.businesses[0].price,\n                rating: response1.data.businesses[0].rating,\n                title: response1.data.businesses[0].categories[0].title\n            };\n            //console.log(hotelsInfo)\n            this.setState({ response1: hotelsInfo });\n        });\n\n        call2.then(response2 => {\n            console.log(response2.data);\n\n            var restaurantsInfo = {\n                name: response2.data.businesses[0].name,\n                image: response2.data.businesses[0].image_url,\n                url: response2.data.businesses[0].url,\n                price: response2.data.businesses[0].price,\n                rating: response2.data.businesses[0].rating,\n                title: response2.data.businesses[0].categories[0].title\n            };\n            console.log(restaurantsInfo);\n            this.setState({ response2: restaurantsInfo });\n        });\n    };\n\n\n    render() {\n        return [\n            <Card\n                name={this.state.response2.title}\n                img=\"restaurant-img\"\n                imgsrc={this.state.response2.image}\n                cardTitle=\"restaurant-name\"\n                nameEntry={this.state.response2.name}\n                value=\"restaurants\"\n                btnName=\"restaurant\"\n                contentID=\"restaurant-info\"\n                title=\"restaurant-title\"\n                rating=\"restaurant-rating\"\n                ratingEntry={this.state.response2.rating}\n                price=\"restaurant-price\"\n                priceEntry={this.state.response2.price}\n                url=\"restaurant-url\"\n                urlEntry={this.state.response2.url}\n            ></Card>,\n\n            <Card\n                name={this.state.response3.title}\n                img=\"coffee-img\"\n                imgsrc={this.state.response3.image}\n                cardTitle=\"coffee-name\"\n                nameEntry={this.state.response3.name}\n                value=\"coffee\"\n                btnName=\"free_breakfast\"\n                contentID=\"coffee-info\"\n                title=\"coffee-title\"\n                rating=\"coffee-rating\"\n                ratingEntry={this.state.response3.rating}\n                price=\"coffee-price\"\n                priceEntry={this.state.response3.price}\n                url=\"coffee-url\"\n                urlEntry={this.state.response3.url}\n            ></Card>,\n\n            <Card\n                name={this.state.response1.title}\n                img=\"hotel-img\"\n                imgsrc={this.state.response1.image}\n                cardTitle=\"hotel-name\"\n                nameEntry={this.state.response1.name}\n                value=\"hotels\"\n                btnName=\"hotel\"\n                contentID=\"hotel-info\"\n                title=\"hotel-title\"\n                rating=\"hotel-rating\"\n                ratingEntry={this.state.response1.rating}\n                price=\"hotel-price\"\n                priceEntry={this.state.response1.price}\n                url=\"hotel-url\"\n                urlEntry={this.state.response1.url}\n            ></Card>, \n        ];\n    }\n\n}\nexport default CardContainer;\n","import React, { Component } from \"react\";\nimport CollectionCard from \"./collectionCard\"\nimport { yelpSearch } from \"../../../utils/API\";\n\nclass CollectionContainer extends Component {\n    state = {\n        responsedetail1: [],\n        responsedetail2: [],\n        responsedetail3: []\n        //search: \"\"\n    };\n\n\n    componentDidUpdate() {\n        if (this.props.parentState && !this.state.search) {\n            const { searchContainInput } = this.props.parentState;\n            this.setState(\n                { search: this.props.parentState }, () => { this.updateCollection() }\n\n            );\n\n        }\n    }\n    updateCollection = search => {\n        var call1 = yelpSearch('hotels', this.state.search.coordLoc.long, this.state.search.coordLoc.lat);\n        var call2 = yelpSearch('restaurants', this.state.search.coordLoc.long, this.state.search.coordLoc.lat);\n        var call3 = yelpSearch('coffee', this.state.search.coordLoc.long, this.state.search.coordLoc.lat);\n\n        (call3).then(response3 => {\n            //console.log(response3.data);\n\n            this.setState({ responsedetail3: response3.data.businesses })\n\n        });\n\n        (call2).then(response2 => {\n            //console.log(response2.data);\n\n            this.setState({ responsedetail2: response2.data.businesses })\n\n        });\n\n        (call1).then(response1 => {\n            console.log(response1.data);\n\n            this.setState({ responsedetail1: response1.data.businesses })\n\n        });\n    }\n\n\n    render() {\n        console.log(this.state.responsedetail3)\n        return [\n            <div className=\"card\" >\n                <div className=\"collection\">\n\n                    {this.state.responsedetail2.map((businesses, index) => (\n                        <CollectionCard key={index}\n                            urlplaceholder={businesses.url}\n                            name={businesses.name}\n                            price={businesses.price}\n                            distance={Math.round((businesses.distance * 0.000621371192) * 10) / 10}\n                        >\n                        </CollectionCard>\n                    ))}\n\n                </div>\n            </div>,\n\n            <div className=\"card\" >\n                <div className=\"collection\">\n                    {this.state.responsedetail3.map((businesses, index) => (\n                        <CollectionCard key={index}\n                            urlplaceholder={businesses.url}\n                            name={businesses.name}\n                            price={businesses.price}\n                            distance={Math.round((businesses.distance * 0.000621371192) * 10) / 10}\n                        >\n                        </CollectionCard>\n                    ))}\n                </div>\n            </div>,\n\n            <div className=\"card\" >\n                <div className=\"collection\">\n\n                    {this.state.responsedetail1.map((businesses, index) => (\n                        <CollectionCard key={index}\n                            urlplaceholder={businesses.url}\n                            name={businesses.name}\n                            price={businesses.price}\n                            distance={Math.round((businesses.distance * 0.000621371192) * 10) / 10}\n                        >\n                        </CollectionCard>\n                    ))}\n\n                </div>\n            </div>\n\n        ]\n    }\n}\n\nexport default CollectionContainer;\n\n","import React, { Component } from \"react\";\nimport Header from \"./components/header/header\";\nimport Footer from \"./components/footer/footer\";\nimport SearchContainer from \"./components/SearchContainer\";\nimport WeatherCard from \"./components/Card/WeatherCard\";\n// import SignUp from \"./components/SignUp/signUp\";\n// import DropDown from \"./components/DropDown\";\n// import SearchForm from \"./components/SearchForm\";\n// import { InputFlight, InputDrive, InputDate } from \"./components/Form\";\n// import Form from \"./components/Form\";\n\nimport WeatherCardContainer from \"./components/Card/Weather\";\nimport Card from \"./components/Card/YelpCard/Card\";\nimport CardContainer from \"./components/Card/YelpCard/cardContainer\"\n//import CollectionContainer from \"./components/Card/YelpCard/collectionContainer\";\n//import \"./App.css\";\n\nclass App extends Component {\n\n  //state = { coordLat: \"\", coordLong: \"\" };\n  state = {\n    airportInfo: \"\"\n  };\n  // componentDidMount(searchContainInput) {\n  //   this.setState({\n  //     searchLocation: { searchContainInput }\n  //   });\n  // }\n\n\n  callbackFunction = searchContainInput => {\n    console.log(searchContainInput.coordLoc.lat + \"= Lat\");\n    console.log(searchContainInput.coordLoc.long + \"= Long\");\n    //this.componentDidMount(searchContainInput);\n    this.setState({\n      searchLocation: searchContainInput\n    });\n  };\n\n  render() {\n    return [\n      <div />,\n      <Header />,\n      <Footer />,\n      <SearchContainer appcb={this.callbackFunction} />,\n\n      <WeatherCardContainer />,\n      <CardContainer parentState={this.state.searchLocation} />,\n     // <CollectionContainer parentState={this.state.searchLocation} />\n\n      // <Card\n      //   name=\"Restaurants\"\n      //   img=\"restaurant-img\"\n      //   cardTitle=\"restaurant-name\"\n      //   value=\"restaurants\"\n      //   btnName=\"restaurant\"\n      //   contentID=\"restaurant-info\"\n      //   title=\"restaurant-title\"\n      //   rating=\"restaurant-rating\"\n      //   price=\"restaurant-price\"\n      //   url=\"restaurant-url\"\n      // ></Card>,\n      // <Card\n\n      //   name=\"Coffee\"\n      //   img=\"coffee-img\"\n      //   cardTitle=\"coffee-name\"\n      //   value=\"coffee\"\n      //   btnName=\"free_breakfast\"\n      //   contentID=\"coffee-info\"\n      //   title=\"coffee-title\"\n      //   rating=\"coffee-rating\"\n      //   price=\"coffee-price\"\n      //   url=\"coffee-url\"\n      // ></Card>,\n      // <Card\n      //   name=\"Hotels\"\n      //   img=\"hotel-img\"\n      //   cardTitle=\"hotel-name\"\n      //   value=\"hotels\"\n      //   btnName=\"hotel\"\n      //   contentID=\"hotel-info\"\n      //   title=\"hotel-title\"\n      //   rating=\"hotel-rating\"\n      //   price=\"hotel-price\"\n      //   url=\"hotel-url\"\n      // ></Card>\n\n    ];\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App';\n\nReactDOM.render( \n<BrowserRouter>\n  <App />\n</BrowserRouter>,\n  document.querySelector('#root'));\n//Warning: Each child in a list should have a unique \"key\" prop.","module.exports = __webpack_public_path__ + \"static/media/teeny_logo.7a60191f.png\";"],"sourceRoot":""}